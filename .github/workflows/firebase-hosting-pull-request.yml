# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR
permissions: write-all
'on': pull_request
env:
  NEXT_PUBLIC_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
  NEXT_PUBLIC_AUTH_DOMAIN: ${{ vars.AUTH_DOMAIN }}
  NEXT_PUBLIC_DATABASE_URL: ${{ vars.DATABASE_URL }}
  NEXT_PUBLIC_PROJECT_ID: ${{ vars.PROJECT_ID }}
  NEXT_PUBLIC_STORAGE_BUCKET: ${{ vars.STORAGE_BUCKET }}
  NEXT_PUBLIC_MESSAGING_SENDER_ID: ${{ vars.MESSAGING_SENDER_ID }}
  NEXT_PUBLIC_APP_ID: ${{ vars.APP_ID }}
  NEXT_PUBLIC_MEASUREMENT_ID: ${{ vars.MEASUREMENT_ID }}
jobs:
  build_and_preview:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache NPM dependencies
        uses: actions/cache@v2
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Install NPM dependencies
        run: npm ci && npm run build

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_NIKITA_KIRDIAPIN_BLOG }}
